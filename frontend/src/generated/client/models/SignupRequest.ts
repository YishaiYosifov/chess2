/* tslint:disable */
/* eslint-disable */
/**
 * Chess2.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SignupRequest
 */
export interface SignupRequest {
    /**
     * 
     * @type {string}
     * @memberof SignupRequest
     */
    userName: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupRequest
     */
    email: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupRequest
     */
    password: string | null;
    /**
     * 
     * @type {string}
     * @memberof SignupRequest
     */
    countryCode?: string | null;
}

/**
 * Check if a given object implements the SignupRequest interface.
 */
export function instanceOfSignupRequest(value: object): value is SignupRequest {
    if (!('userName' in value) || value['userName'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    return true;
}

export function SignupRequestFromJSON(json: any): SignupRequest {
    return SignupRequestFromJSONTyped(json, false);
}

export function SignupRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SignupRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'userName': json['userName'],
        'email': json['email'],
        'password': json['password'],
        'countryCode': json['countryCode'] == null ? undefined : json['countryCode'],
    };
}

export function SignupRequestToJSON(json: any): SignupRequest {
    return SignupRequestToJSONTyped(json, false);
}

export function SignupRequestToJSONTyped(value?: SignupRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userName': value['userName'],
        'email': value['email'],
        'password': value['password'],
        'countryCode': value['countryCode'],
    };
}

