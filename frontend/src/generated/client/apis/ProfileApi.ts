/* tslint:disable */
/* eslint-disable */
/**
 * Chess2.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Operation,
  PrivateUserOut,
  ProblemDetails,
  UserOut,
} from '../models/index';
import {
    OperationFromJSON,
    OperationToJSON,
    PrivateUserOutFromJSON,
    PrivateUserOutToJSON,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    UserOutFromJSON,
    UserOutToJSON,
} from '../models/index';

export interface EditProfileSettingsRequest {
    operation?: Array<Operation>;
}

export interface EditUsernameRequest {
    body?: string;
}

export interface GetUserRequest {
    username: string;
}

/**
 * 
 */
export class ProfileApi extends runtime.BaseAPI {

    /**
     */
    async editProfileSettingsRaw(requestParameters: EditProfileSettingsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateUserOut>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/api/Profile/edit-profile`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['operation']!.map(OperationToJSON),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PrivateUserOutFromJSON(jsonValue));
    }

    /**
     */
    async editProfileSettings(requestParameters: EditProfileSettingsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateUserOut> {
        const response = await this.editProfileSettingsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async editUsernameRaw(requestParameters: EditUsernameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateUserOut>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/api/Profile/edit-username`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters['body'] as any,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PrivateUserOutFromJSON(jsonValue));
    }

    /**
     */
    async editUsername(requestParameters: EditUsernameRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateUserOut> {
        const response = await this.editUsernameRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getAuthedUserRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateUserOut>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Profile/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PrivateUserOutFromJSON(jsonValue));
    }

    /**
     */
    async getAuthedUser(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateUserOut> {
        const response = await this.getAuthedUserRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getUserRaw(requestParameters: GetUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserOut>> {
        if (requestParameters['username'] == null) {
            throw new runtime.RequiredError(
                'username',
                'Required parameter "username" was null or undefined when calling getUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Profile/by-username/{username}`.replace(`{${"username"}}`, encodeURIComponent(String(requestParameters['username']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserOutFromJSON(jsonValue));
    }

    /**
     */
    async getUser(requestParameters: GetUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserOut> {
        const response = await this.getUserRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
