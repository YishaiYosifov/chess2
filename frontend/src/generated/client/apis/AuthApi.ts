/* tslint:disable */
/* eslint-disable */
/**
 * Chess2.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PrivateUserOut,
  ProblemDetails,
  SigninRequest,
  SignupRequest,
  Tokens,
} from '../models/index';
import {
    PrivateUserOutFromJSON,
    PrivateUserOutToJSON,
    ProblemDetailsFromJSON,
    ProblemDetailsToJSON,
    SigninRequestFromJSON,
    SigninRequestToJSON,
    SignupRequestFromJSON,
    SignupRequestToJSON,
    TokensFromJSON,
    TokensToJSON,
} from '../models/index';

export interface SigninOperationRequest {
    signinRequest?: SigninRequest;
}

export interface SignupOperationRequest {
    signupRequest?: SignupRequest;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     */
    async createsGuestUserRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Auth/guest`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async createsGuestUser(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.createsGuestUserRaw(initOverrides);
    }

    /**
     */
    async refreshRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Auth/refresh`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async refresh(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.refreshRaw(initOverrides);
    }

    /**
     */
    async signinRaw(requestParameters: SigninOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Tokens>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/api/Auth/signin`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SigninRequestToJSON(requestParameters['signinRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TokensFromJSON(jsonValue));
    }

    /**
     */
    async signin(requestParameters: SigninOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Tokens> {
        const response = await this.signinRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async signupRaw(requestParameters: SignupOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PrivateUserOut>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        const response = await this.request({
            path: `/api/Auth/signup`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: SignupRequestToJSON(requestParameters['signupRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PrivateUserOutFromJSON(jsonValue));
    }

    /**
     */
    async signup(requestParameters: SignupOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PrivateUserOut> {
        const response = await this.signupRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async testAuthedRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Auth/test-authed`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async testAuthed(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.testAuthedRaw(initOverrides);
    }

    /**
     */
    async testGuestRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/Auth/test-guest`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async testGuest(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.testGuestRaw(initOverrides);
    }

}
