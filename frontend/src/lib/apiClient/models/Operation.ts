/* tslint:disable */
/* eslint-disable */
/**
 * Chess2.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OperationType } from './OperationType';
import {
    OperationTypeFromJSON,
    OperationTypeFromJSONTyped,
    OperationTypeToJSON,
    OperationTypeToJSONTyped,
} from './OperationType';

/**
 * 
 * @export
 * @interface Operation
 */
export interface Operation {
    /**
     * 
     * @type {OperationType}
     * @memberof Operation
     */
    operationType?: OperationType;
    /**
     * 
     * @type {string}
     * @memberof Operation
     */
    path?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Operation
     */
    op?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Operation
     */
    from?: string | null;
    /**
     * 
     * @type {any}
     * @memberof Operation
     */
    value?: any | null;
}



/**
 * Check if a given object implements the Operation interface.
 */
export function instanceOfOperation(value: object): value is Operation {
    return true;
}

export function OperationFromJSON(json: any): Operation {
    return OperationFromJSONTyped(json, false);
}

export function OperationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Operation {
    if (json == null) {
        return json;
    }
    return {
        
        'operationType': json['operationType'] == null ? undefined : OperationTypeFromJSON(json['operationType']),
        'path': json['path'] == null ? undefined : json['path'],
        'op': json['op'] == null ? undefined : json['op'],
        'from': json['from'] == null ? undefined : json['from'],
        'value': json['value'] == null ? undefined : json['value'],
    };
}

export function OperationToJSON(json: any): Operation {
    return OperationToJSONTyped(json, false);
}

export function OperationToJSONTyped(value?: Operation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'operationType': OperationTypeToJSON(value['operationType']),
        'path': value['path'],
        'op': value['op'],
        'from': value['from'],
        'value': value['value'],
    };
}

