// This file is auto-generated by @hey-api/openapi-ts

export type ApiProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    errors?: Array<ApiProblemError>;
};

export enum ErrorCode {
    USER_CONFLICT_USERNAME = "User.Conflict.Username",
    USER_CONFLICT_EMAIL = "User.Conflict.Email",
    USER_NOT_FOUND = "User.NotFound",
    USER_BAD_CREDENTIALS = "User.BadCredentials",
    USER_COOLDOWN_SETTING = "User.Cooldown.Setting",
    AUTH_TOKEN_MISSING = "Auth.TokenMissing",
    AUTH_TOKEN_INVALID = "Auth.TokenInvalid",
}

export type ApiProblemError = {
    errorCode:
        | "User.Conflict.Username"
        | "User.Conflict.Email"
        | "User.NotFound"
        | "User.BadCredentials"
        | "User.Cooldown.Setting"
        | "Auth.TokenMissing"
        | "Auth.TokenInvalid";
    description: string;
};

export type AuthResponseDto = {
    authTokens: Tokens;
    user: PrivateUser;
};

export type Operation = {
    value?: unknown;
    operationType?: OperationType;
    path?: string | null;
    op?: string | null;
    from?: string | null;
};

export enum OperationType {
    ADD = "Add",
    REMOVE = "Remove",
    REPLACE = "Replace",
    MOVE = "Move",
    COPY = "Copy",
    TEST = "Test",
    INVALID = "Invalid",
}

export type PrivateUser = {
    email?: string | null;
    userId?: number;
    userName?: string | null;
    about?: string | null;
    countryCode?: string | null;
};

export type SigninRequest = {
    usernameOrEmail: string;
    password: string;
};

export type SignupRequest = {
    userName: string;
    email: string;
    password: string;
    countryCode?: string | null;
};

export type Tokens = {
    accessToken: string;
    accessTokenExpiresInSeconds: number;
    refreshToken: string;
};

export type User = {
    userId?: number;
    userName?: string | null;
    about?: string | null;
    countryCode?: string | null;
};

export type ValidationProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    errors?: {
        [key: string]: Array<string>;
    };
};

export type SignupData = {
    body: SignupRequest;
    path?: never;
    query?: never;
    url: "/api/Auth/signup";
};

export type SignupErrors = {
    /**
     * Bad Request
     */
    400: ValidationProblemDetails;
    /**
     * Conflict
     */
    409: ApiProblemDetails;
};

export type SignupError = SignupErrors[keyof SignupErrors];

export type SignupResponses = {
    /**
     * OK
     */
    200: PrivateUser;
};

export type SignupResponse = SignupResponses[keyof SignupResponses];

export type SigninData = {
    body: SigninRequest;
    path?: never;
    query?: never;
    url: "/api/Auth/signin";
};

export type SigninErrors = {
    /**
     * Not Found
     */
    404: ApiProblemDetails;
};

export type SigninError = SigninErrors[keyof SigninErrors];

export type SigninResponses = {
    /**
     * OK
     */
    200: AuthResponseDto;
};

export type SigninResponse = SigninResponses[keyof SigninResponses];

export type RefreshData = {
    body?: never;
    path?: never;
    query?: never;
    url: "/api/Auth/refresh";
};

export type RefreshErrors = {
    /**
     * Unauthorized
     */
    401: ApiProblemDetails;
    /**
     * Forbidden
     */
    403: ApiProblemDetails;
};

export type RefreshError = RefreshErrors[keyof RefreshErrors];

export type RefreshResponses = {
    /**
     * No Content
     */
    204: AuthResponseDto;
};

export type RefreshResponse = RefreshResponses[keyof RefreshResponses];

export type CreateGuestUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: "/api/Auth/guest";
};

export type CreateGuestUserResponses = {
    /**
     * No Content
     */
    204: void;
};

export type CreateGuestUserResponse =
    CreateGuestUserResponses[keyof CreateGuestUserResponses];

export type TestAuthedData = {
    body?: never;
    path?: never;
    query?: never;
    url: "/api/Auth/test-authed";
};

export type TestAuthedErrors = {
    /**
     * Unauthorized
     */
    401: ApiProblemDetails;
};

export type TestAuthedError = TestAuthedErrors[keyof TestAuthedErrors];

export type TestAuthedResponses = {
    /**
     * No Content
     */
    204: void;
};

export type TestAuthedResponse = TestAuthedResponses[keyof TestAuthedResponses];

export type TestGuestData = {
    body?: never;
    path?: never;
    query?: never;
    url: "/api/Auth/test-guest";
};

export type TestGuestErrors = {
    /**
     * Unauthorized
     */
    401: ApiProblemDetails;
};

export type TestGuestError = TestGuestErrors[keyof TestGuestErrors];

export type TestGuestResponses = {
    /**
     * No Content
     */
    204: void;
};

export type TestGuestResponse = TestGuestResponses[keyof TestGuestResponses];

export type GetAuthedUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: "/api/Profile/me";
};

export type GetAuthedUserErrors = {
    /**
     * Unauthorized
     */
    401: ApiProblemDetails;
};

export type GetAuthedUserError = GetAuthedUserErrors[keyof GetAuthedUserErrors];

export type GetAuthedUserResponses = {
    /**
     * OK
     */
    200: PrivateUser;
};

export type GetAuthedUserResponse =
    GetAuthedUserResponses[keyof GetAuthedUserResponses];

export type GetUserData = {
    body?: never;
    path: {
        username: string;
    };
    query?: never;
    url: "/api/Profile/by-username/{username}";
};

export type GetUserErrors = {
    /**
     * Not Found
     */
    404: ApiProblemDetails;
};

export type GetUserError = GetUserErrors[keyof GetUserErrors];

export type GetUserResponses = {
    /**
     * OK
     */
    200: User;
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];

export type EditProfileSettingsData = {
    body: Array<Operation>;
    path?: never;
    query?: never;
    url: "/api/Profile/edit-profile";
};

export type EditProfileSettingsErrors = {
    /**
     * Bad Request
     */
    400: ValidationProblemDetails;
    /**
     * Unauthorized
     */
    401: ApiProblemDetails;
};

export type EditProfileSettingsError =
    EditProfileSettingsErrors[keyof EditProfileSettingsErrors];

export type EditProfileSettingsResponses = {
    /**
     * OK
     */
    200: PrivateUser;
};

export type EditProfileSettingsResponse =
    EditProfileSettingsResponses[keyof EditProfileSettingsResponses];

export type EditUsernameData = {
    body: string;
    path?: never;
    query?: never;
    url: "/api/Profile/edit-username";
};

export type EditUsernameErrors = {
    /**
     * Unauthorized
     */
    401: ApiProblemDetails;
};

export type EditUsernameError = EditUsernameErrors[keyof EditUsernameErrors];

export type EditUsernameResponses = {
    /**
     * No Content
     */
    204: PrivateUser;
};

export type EditUsernameResponse =
    EditUsernameResponses[keyof EditUsernameResponses];

export type ClientOptions = {
    baseUrl: "http://127.0.0.1:5116/" | (string & {});
};
